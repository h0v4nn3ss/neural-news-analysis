#!/usr/bin/env python3
"""
Script de verificaci√≥n para confirmar que todas las librer√≠as est√°n instaladas correctamente
"""

import sys


def verify_installation():
    """Verifica que todas las librer√≠as necesarias est√©n instaladas"""
    print("üîç Verificando instalaci√≥n de librer√≠as...\n")

    # Lista de librer√≠as a verificar
    libraries = {
        "pandas": "pd",
        "numpy": "np",
        "matplotlib.pyplot": "plt",
        "seaborn": "sns",
        "tensorflow": "tf",
        "sklearn": "sklearn",
        "xgboost": "xgb",
        "gensim": "gensim",
        "nltk": "nltk",
        "wordcloud": "wordcloud",
        "gdown": "gdown",
    }

    failed_imports = []

    for lib_name, alias in libraries.items():
        try:
            exec(f"import {lib_name} as {alias}")

            # Obtener versi√≥n si est√° disponible
            try:
                version = eval(f"{alias}.__version__")
                print(f"‚úÖ {lib_name}: {version}")
            except AttributeError:
                print(f"‚úÖ {lib_name}: importado correctamente")

        except ImportError as e:
            print(f"‚ùå {lib_name}: ERROR - {e}")
            failed_imports.append(lib_name)

    print("\n" + "=" * 50)

    if failed_imports:
        print(f"‚ùå FALL√ì LA VERIFICACI√ìN")
        print(f"Librer√≠as faltantes: {', '.join(failed_imports)}")
        print("Ejecuta los comandos de instalaci√≥n del plan de resoluci√≥n.")
        return False
    else:
        print("üéâ ¬°TODAS LAS LIBRER√çAS INSTALADAS CORRECTAMENTE!")
        print("El entorno est√° listo para el proyecto de redes neuronales.")
        return True


def check_python_version():
    """Verifica la versi√≥n de Python"""
    print(f"üêç Python: {sys.version}")
    major, minor = sys.version_info[:2]

    if major == 3 and minor >= 9:
        print("‚úÖ Versi√≥n de Python compatible")
        return True
    else:
        print("‚ùå Se requiere Python 3.9 o superior")
        return False


if __name__ == "__main__":
    print("=" * 60)
    print("üîß VERIFICACI√ìN DEL ENTORNO - NEURAL NEWS PROJECT")
    print("=" * 60)
    print()

    # Verificar Python
    python_ok = check_python_version()
    print()

    # Verificar librer√≠as
    libs_ok = verify_installation()

    print("\n" + "=" * 60)
    if python_ok and libs_ok:
        print("üöÄ El entorno est√° listo. Puedes comenzar el proyecto!")
        print("Pr√≥ximo paso: Crear el notebook principal y descargar los datasets.")
    else:
        print("‚ö†Ô∏è  Corrige los errores antes de continuar.")
    print("=" * 60)
